local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Teams = game:GetService("Teams")
local Camera = workspace.CurrentCamera
local TweenService = game:GetService("TweenService")

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player.PlayerGui
screenGui.Name = "ControlGUI"
screenGui.ResetOnSpawn = false

-- Create ScrollingFrame
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(0, 250, 0, 450)
scrollingFrame.Position = UDim2.new(0.5, -125, 0.5, -225)
scrollingFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
scrollingFrame.BackgroundTransparency = 0.1
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 6
scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(120, 120, 120)
scrollingFrame.Visible = false
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.Parent = screenGui

-- Add UICorner to ScrollingFrame
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = scrollingFrame

-- Add UIStroke to ScrollingFrame
local frameStroke = Instance.new("UIStroke")
frameStroke.Thickness = 2
frameStroke.Color = Color3.fromRGB(80, 80, 255)
frameStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
frameStroke.Parent = scrollingFrame

-- Add UIGradient to ScrollingFrame
local frameGradient = Instance.new("UIGradient")
frameGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 25)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 40))
})
frameGradient.Parent = scrollingFrame

-- Add UIListLayout to ScrollingFrame
local listLayout = Instance.new("UIListLayout")
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 8)
listLayout.Parent = scrollingFrame

-- Add UIPadding to ScrollingFrame
local padding = Instance.new("UIPadding")
padding.PaddingTop = UDim.new(0, 15)
padding.PaddingBottom = UDim.new(0, 15)
padding.PaddingLeft = UDim.new(0, 15)
padding.PaddingRight = UDim.new(0, 15)
padding.Parent = scrollingFrame

-- Create Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Player Control Panel"
titleLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
titleLabel.TextSize = 22
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextScaled = true
titleLabel.LayoutOrder = 0
titleLabel.Parent = scrollingFrame

-- Create Separator for TPWalk Section
local tpWalkSeparator = Instance.new("Frame")
tpWalkSeparator.Size = UDim2.new(1, 0, 0, 2)
tpWalkSeparator.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
tpWalkSeparator.BorderSizePixel = 0
tpWalkSeparator.LayoutOrder = 1
tpWalkSeparator.Parent = scrollingFrame

-- Create TextBox for TPWalk speed multiplier
local speedTextBox = Instance.new("TextBox")
speedTextBox.Size = UDim2.new(1, 0, 0, 40)
speedTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
speedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
speedTextBox.PlaceholderText = "TPWalk Speed Multiplier"
speedTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
speedTextBox.Text = "1"
speedTextBox.TextSize = 16
speedTextBox.Font = Enum.Font.Gotham
speedTextBox.TextScaled = true
speedTextBox.LayoutOrder = 2
speedTextBox.Parent = scrollingFrame

-- Add UICorner and UIStroke to TPWalk Speed TextBox
local speedTextBoxCorner = Instance.new("UICorner")
speedTextBoxCorner.CornerRadius = UDim.new(0, 6)
speedTextBoxCorner.Parent = speedTextBox

local speedTextBoxStroke = Instance.new("UIStroke")
speedTextBoxStroke.Color = Color3.fromRGB(80, 80, 255)
speedTextBoxStroke.Thickness = 1
speedTextBoxStroke.Parent = speedTextBox

-- Create TPWalk Toggle Button
local tpWalkButton = Instance.new("TextButton")
tpWalkButton.Size = UDim2.new(1, 0, 0, 40)
tpWalkButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
tpWalkButton.TextColor3 = Color3.fromRGB(255, 255, 255)
tpWalkButton.Text = "Enable TPWalk"
tpWalkButton.TextSize = 16
tpWalkButton.Font = Enum.Font.Gotham
tpWalkButton.TextScaled = true
tpWalkButton.LayoutOrder = 3
tpWalkButton.Parent = scrollingFrame

-- Add UICorner and UIStroke to TPWalk Button
local tpWalkButtonCorner = Instance.new("UICorner")
tpWalkButtonCorner.CornerRadius = UDim.new(0, 6)
tpWalkButtonCorner.Parent = tpWalkButton

local tpWalkButtonStroke = Instance.new("UIStroke")
tpWalkButtonStroke.Color = Color3.fromRGB(80, 80, 255)
tpWalkButtonStroke.Thickness = 1
tpWalkButtonStroke.Parent = tpWalkButton

-- Hover effect for TPWalk Button
tpWalkButton.MouseEnter:Connect(function()
    tpWalkButton.BackgroundColor3 = tpWalkButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
tpWalkButton.MouseLeave:Connect(function()
    tpWalkButton.BackgroundColor3 = tpWalkButton.Text == "Enable TPWalk" and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
end)

-- Create Separator for Aimlock Section
local aimlockSeparator = Instance.new("Frame")
aimlockSeparator.Size = UDim2.new(1, 0, 0, 2)
aimlockSeparator.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
aimlockSeparator.BorderSizePixel = 0
aimlockSeparator.LayoutOrder = 4
aimlockSeparator.Parent = scrollingFrame

-- Create TextBox for Aimlock Range
local rangeTextBox = Instance.new("TextBox")
rangeTextBox.Size = UDim2.new(1, 0, 0, 40)
rangeTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
rangeTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeTextBox.PlaceholderText = "Aimlock Range (studs)"
rangeTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
rangeTextBox.Text = "100"
rangeTextBox.TextSize = 16
rangeTextBox.Font = Enum.Font.Gotham
rangeTextBox.TextScaled = true
rangeTextBox.LayoutOrder = 5
rangeTextBox.Parent = scrollingFrame

-- Add UICorner and UIStroke to Range TextBox
local rangeTextBoxCorner = Instance.new("UICorner")
rangeTextBoxCorner.CornerRadius = UDim.new(0, 6)
rangeTextBoxCorner.Parent = rangeTextBox

local rangeTextBoxStroke = Instance.new("UIStroke")
rangeTextBoxStroke.Color = Color3.fromRGB(80, 80, 255)
rangeTextBoxStroke.Thickness = 1
rangeTextBoxStroke.Parent = rangeTextBox

-- Create TextBox for NPC names
local npcTextBox = Instance.new("TextBox")
npcTextBox.Size = UDim2.new(1, 0, 0, 40)
npcTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
npcTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
npcTextBox.PlaceholderText = "NPC Names (comma-separated)"
npcTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
npcTextBox.Text = ""
npcTextBox.TextSize = 16
npcTextBox.Font = Enum.Font.Gotham
npcTextBox.TextScaled = true
npcTextBox.LayoutOrder = 6
npcTextBox.Parent = scrollingFrame

-- Add UICorner and UIStroke to NPC TextBox
local npcTextBoxCorner = Instance.new("UICorner")
npcTextBoxCorner.CornerRadius = UDim.new(0, 6)
npcTextBoxCorner.Parent = npcTextBox

local npcTextBoxStroke = Instance.new("UIStroke")
npcTextBoxStroke.Color = Color3.fromRGB(80, 80, 255)
npcTextBoxStroke.Thickness = 1
npcTextBoxStroke.Parent = npcTextBox

-- Create TextBox for Team names
local teamTextBox = Instance.new("TextBox")
teamTextBox.Size = UDim2.new(1, 0, 0, 40)
teamTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
teamTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
teamTextBox.PlaceholderText = "Teams to Exclude (comma-separated)"
teamTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
teamTextBox.Text = player.Team and player.Team.Name or ""
teamTextBox.TextSize = 16
teamTextBox.Font = Enum.Font.Gotham
teamTextBox.TextScaled = true
teamTextBox.LayoutOrder = 7
teamTextBox.Parent = scrollingFrame

-- Update teamTextBox when player's team changes
player:GetPropertyChangedSignal("Team"):Connect(function()
    teamTextBox.Text = player.Team and player.Team.Name or ""
end)

-- Add UICorner and UIStroke to Team TextBox
local teamTextBoxCorner = Instance.new("UICorner")
teamTextBoxCorner.CornerRadius = UDim.new(0, 6)
teamTextBoxCorner.Parent = teamTextBox

local teamTextBoxStroke = Instance.new("UIStroke")
teamTextBoxStroke.Color = Color3.fromRGB(80, 80, 255)
teamTextBoxStroke.Thickness = 1
teamTextBoxStroke.Parent = teamTextBox

-- Create Player Aimlock Button
local playerAimlockButton = Instance.new("TextButton")
playerAimlockButton.Size = UDim2.new(1, 0, 0, 40)
playerAimlockButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
playerAimlockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
playerAimlockButton.Text = "Player Aimlock Off"
playerAimlockButton.TextSize = 16
playerAimlockButton.Font = Enum.Font.Gotham
playerAimlockButton.TextScaled = true
playerAimlockButton.LayoutOrder = 8
playerAimlockButton.Parent = scrollingFrame

-- Add UICorner and UIStroke to Player Aimlock Button
local playerAimlockButtonCorner = Instance.new("UICorner")
playerAimlockButtonCorner.CornerRadius = UDim.new(0, 6)
playerAimlockButtonCorner.Parent = playerAimlockButton

local playerAimlockButtonStroke = Instance.new("UIStroke")
playerAimlockButtonStroke.Color = Color3.fromRGB(80, 80, 255)
playerAimlockButtonStroke.Thickness = 1
playerAimlockButtonStroke.Parent = playerAimlockButton

-- Hover effect for Player Aimlock Button
playerAimlockButton.MouseEnter:Connect(function()
    playerAimlockButton.BackgroundColor3 = playerAimlockButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
playerAimlockButton.MouseLeave:Connect(function()
    playerAimlockButton.BackgroundColor3 = playerAimlockButton.Text == "Player Aimlock Off" and Color3.fromRGB(200, 0, 0) or Color3.fromRGB(0, 200, 0)
end)

-- Create NPC Aimlock Button
local npcAimlockButton = Instance.new("TextButton")
npcAimlockButton.Size = UDim2.new(1, 0, 0, 40)
npcAimlockButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
npcAimlockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
npcAimlockButton.Text = "NPC Aimlock Off"
npcAimlockButton.TextSize = 16
npcAimlockButton.Font = Enum.Font.Gotham
npcAimlockButton.TextScaled = true
npcAimlockButton.LayoutOrder = 9
npcAimlockButton.Parent = scrollingFrame

-- Add UICorner and UIStroke to NPC Aimlock Button
local npcAimlockButtonCorner = Instance.new("UICorner")
npcAimlockButtonCorner.CornerRadius = UDim.new(0, 6)
npcAimlockButtonCorner.Parent = npcAimlockButton

local npcAimlockButtonStroke = Instance.new("UIStroke")
npcAimlockButtonStroke.Color = Color3.fromRGB(80, 80, 255)
npcAimlockButtonStroke.Thickness = 1
npcAimlockButtonStroke.Parent = npcAimlockButton

-- Hover effect for NPC Aimlock Button
npcAimlockButton.MouseEnter:Connect(function()
    npcAimlockButton.BackgroundColor3 = npcAimlockButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
npcAimlockButton.MouseLeave:Connect(function()
    npcAimlockButton.BackgroundColor3 = npcAimlockButton.Text == "NPC Aimlock Off" and Color3.fromRGB(200, 0, 0) or Color3.fromRGB(0, 200, 0)
end)

-- Create Ignore Walls Toggle Button
local ignoreWallsButton = Instance.new("TextButton")
ignoreWallsButton.Size = UDim2.new(1, 0, 0, 40)
ignoreWallsButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
ignoreWallsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ignoreWallsButton.Text = "Ignore Walls Off"
ignoreWallsButton.TextSize = 16
ignoreWallsButton.Font = Enum.Font.Gotham
ignoreWallsButton.TextScaled = true
ignoreWallsButton.LayoutOrder = 10
ignoreWallsButton.Parent = scrollingFrame

-- Add UICorner and UIStroke to Ignore Walls Button
local ignoreWallsButtonCorner = Instance.new("UICorner")
ignoreWallsButtonCorner.CornerRadius = UDim.new(0, 6)
ignoreWallsButtonCorner.Parent = ignoreWallsButton

local ignoreWallsButtonStroke = Instance.new("UIStroke")
ignoreWallsButtonStroke.Color = Color3.fromRGB(80, 80, 255)
ignoreWallsButtonStroke.Thickness = 1
ignoreWallsButtonStroke.Parent = ignoreWallsButton

-- Hover effect for Ignore Walls Button
ignoreWallsButton.MouseEnter:Connect(function()
    ignoreWallsButton.BackgroundColor3 = ignoreWallsButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
ignoreWallsButton.MouseLeave:Connect(function()
    ignoreWallsButton.BackgroundColor3 = ignoreWallsButton.Text == "Ignore Walls Off" and Color3.fromRGB(200, 0, 0) or Color3.fromRGB(0, 200, 0)
end)

-- Create Separator for Hitbox Section
local hitboxSeparator = Instance.new("Frame")
hitboxSeparator.Size = UDim2.new(1, 0, 0, 2)
hitboxSeparator.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
hitboxSeparator.BorderSizePixel = 0
hitboxSeparator.LayoutOrder = 11
hitboxSeparator.Parent = scrollingFrame

-- Create TextBox for Hitbox Size
local hitboxSizeTextBox = Instance.new("TextBox")
hitboxSizeTextBox.Size = UDim2.new(1, 0, 0, 40)
hitboxSizeTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
hitboxSizeTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxSizeTextBox.PlaceholderText = "Hitbox Size"
hitboxSizeTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
hitboxSizeTextBox.Text = "20"
hitboxSizeTextBox.TextSize = 16
hitboxSizeTextBox.Font = Enum.Font.Gotham
hitboxSizeTextBox.TextScaled = true
hitboxSizeTextBox.LayoutOrder = 12
hitboxSizeTextBox.Parent = scrollingFrame

-- Add UICorner and UIStroke to Hitbox Size TextBox
local hitboxSizeTextBoxCorner = Instance.new("UICorner")
hitboxSizeTextBoxCorner.CornerRadius = UDim.new(0, 6)
hitboxSizeTextBoxCorner.Parent = hitboxSizeTextBox

local hitboxSizeTextBoxStroke = Instance.new("UIStroke")
hitboxSizeTextBoxStroke.Color = Color3.fromRGB(80, 80, 255)
hitboxSizeTextBoxStroke.Thickness = 1
hitboxSizeTextBoxStroke.Parent = hitboxSizeTextBox

-- Create TextBox for Hitbox Team Exclusions
local hitboxTeamTextBox = Instance.new("TextBox")
hitboxTeamTextBox.Size = UDim2.new(1, 0, 0, 40)
hitboxTeamTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
hitboxTeamTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxTeamTextBox.PlaceholderText = "Teams to Exclude (comma-separated)"
hitboxTeamTextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
hitboxTeamTextBox.Text = player.Team and player.Team.Name or ""
hitboxTeamTextBox.TextSize = 16
hitboxTeamTextBox.Font = Enum.Font.Gotham
hitboxTeamTextBox.TextScaled = true
hitboxTeamTextBox.LayoutOrder = 13
hitboxTeamTextBox.Parent = scrollingFrame

-- Update hitboxTeamTextBox when player's team changes
player:GetPropertyChangedSignal("Team"):Connect(function()
    hitboxTeamTextBox.Text = player.Team and player.Team.Name or ""
end)

-- Add UICorner and UIStroke to Hitbox Team TextBox
local hitboxTeamTextBoxCorner = Instance.new("UICorner")
hitboxTeamTextBoxCorner.CornerRadius = UDim.new(0, 6)
hitboxTeamTextBoxCorner.Parent = hitboxTeamTextBox

local hitboxTeamTextBoxStroke = Instance.new("UIStroke")
hitboxTeamTextBoxStroke.Color = Color3.fromRGB(80, 80, 255)
hitboxTeamTextBoxStroke.Thickness = 1
hitboxTeamTextBoxStroke.Parent = hitboxTeamTextBox

-- Create Hitbox Toggle Button
local hitboxButton = Instance.new("TextButton")
hitboxButton.Size = UDim2.new(1, 0, 0, 40)
hitboxButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
hitboxButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxButton.Text = "Hitbox Off"
hitboxButton.TextSize = 16
hitboxButton.Font = Enum.Font.Gotham
hitboxButton.TextScaled = true
hitboxButton.LayoutOrder = 14
hitboxButton.Parent = scrollingFrame

-- Add UICorner and UIStroke to Hitbox Button
local hitboxButtonCorner = Instance.new("UICorner")
hitboxButtonCorner.CornerRadius = UDim.new(0, 6)
hitboxButtonCorner.Parent = hitboxButton

local hitboxButtonStroke = Instance.new("UIStroke")
hitboxButtonStroke.Color = Color3.fromRGB(80, 80, 255)
hitboxButtonStroke.Thickness = 1
hitboxButtonStroke.Parent = hitboxButton

-- Hover effect for Hitbox Button
hitboxButton.MouseEnter:Connect(function()
    hitboxButton.BackgroundColor3 = hitboxButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
hitboxButton.MouseLeave:Connect(function()
    hitboxButton.BackgroundColor3 = hitboxButton.Text == "Hitbox Off" and Color3.fromRGB(200, 0, 0) or Color3.fromRGB(0, 200, 0)
end)

-- Create Separator for ESP Section
local espSeparator = Instance.new("Frame")
espSeparator.Size = UDim2.new(1, 0, 0, 2)
espSeparator.BackgroundColor3 = Color3.fromRGB(80, 80, 255)
espSeparator.BorderSizePixel = 0
espSeparator.LayoutOrder = 15
espSeparator.Parent = scrollingFrame

-- Create ESP Toggle Button
local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(1, 0, 0, 40)
espButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espButton.Text = "ESP Off"
espButton.TextSize = 16
espButton.Font = Enum.Font.Gotham
espButton.TextScaled = true
espButton.LayoutOrder = 16
espButton.Parent = scrollingFrame

-- Add UICorner and UIStroke to ESP Button
local espButtonCorner = Instance.new("UICorner")
espButtonCorner.CornerRadius = UDim.new(0, 6)
espButtonCorner.Parent = espButton

local espButtonStroke = Instance.new("UIStroke")
espButtonStroke.Color = Color3.fromRGB(80, 80, 255)
espButtonStroke.Thickness = 1
espButtonStroke.Parent = espButton

-- Hover effect for ESP Button
espButton.MouseEnter:Connect(function()
    espButton.BackgroundColor3 = espButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
espButton.MouseLeave:Connect(function()
    espButton.BackgroundColor3 = espButton.Text == "ESP Off" and Color3.fromRGB(200, 0, 0) or Color3.fromRGB(0, 200, 0)
end)

-- Create Toggle Button (outside ScrollingFrame)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Text = "Off"
toggleButton.TextSize = 16
toggleButton.Active = true
toggleButton.Draggable = true
toggleButton.Font = Enum.Font.Gotham
toggleButton.TextScaled = true
toggleButton.Parent = screenGui

-- Add UICorner and UIStroke to Toggle Button
local toggleButtonCorner = Instance.new("UICorner")
toggleButtonCorner.CornerRadius = UDim.new(0, 6)
toggleButtonCorner.Parent = toggleButton

local toggleButtonStroke = Instance.new("UIStroke")
toggleButtonStroke.Color = Color3.fromRGB(80, 80, 255)
toggleButtonStroke.Thickness = 1
toggleButtonStroke.Parent = toggleButton

-- Hover effect for Toggle Button
toggleButton.MouseEnter:Connect(function()
    toggleButton.BackgroundColor3 = toggleButton.BackgroundColor3:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
end)
toggleButton.MouseLeave:Connect(function()
    toggleButton.BackgroundColor3 = toggleButton.Text == "Off" and Color3.fromRGB(25, 25, 25) or Color3.fromRGB(0, 200, 0)
end)

-- Dynamically update CanvasSize based on content
local function updateCanvasSize()
    local totalHeight = 0
    for _, child in pairs(scrollingFrame:GetChildren()) do
        if child:IsA("GuiObject") and child.Visible then
            totalHeight = totalHeight + child.Size.Y.Offset + listLayout.Padding.Offset
        end
    end
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, totalHeight + 20)
end

-- Connect to update CanvasSize
scrollingFrame.ChildAdded:Connect(updateCanvasSize)
scrollingFrame.ChildRemoved:Connect(updateCanvasSize)
listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSize)
updateCanvasSize()

-- TPWalk variables
local tpwalking = false
local speedMultiplier = 1
local tpConnection

-- ESP variables
local espEnabled = false
local highlights = {}
local beams = {}

-- Aimlock variables
local playerAimlockEnabled = false
local npcAimlockEnabled = false
local ignoreWalls = false
local aimlockConnection
local target = nil
local lastTargetSearch = 0
local searchCooldown = 0.5
local potentialNPCs = {}
local aimlockPaused = false
local FOV_ANGLE = 90

-- Hitbox variables
local hitboxEnabled = false
local hitboxSize = 20
local hitboxConnection
local originalHitboxProperties = {}

-- Function to parse comma-separated input
local function parseInput(input)
    local items = {}
    for item in input:gmatch("[^,]+") do
        items[#items + 1] = item:match("^%s*(.-)%s*$")
    end
    return items
end

-- Function to get aimlock range
local function getAimlockRange()
    local range = tonumber(rangeTextBox.Text)
    if not range or range < 0 then
        return 0
    end
    return range
end

-- Function to get hitbox size
local function getHitboxSize()
    local size = tonumber(hitboxSizeTextBox.Text)
    if not size or size < 0 then
        return 0
    end
    return size
end

-- Function to check if a part is visible
local function isVisible(fromPart, toPart)
    if not (fromPart and toPart) then
        return false
    end
    if ignoreWalls then
        return true
    end
    local ignoreList = {player.Character}
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            table.insert(ignoreList, otherPlayer.Character)
        end
    end
    for _, npc in pairs(potentialNPCs) do
        if npc.Parent then
            table.insert(ignoreList, npc)
        end
    end
    local ray = Ray.new(fromPart.Position, (toPart.Position - fromPart.Position).Unit * (toPart.Position - fromPart.Position).Magnitude)
    local hit, position = workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
    return hit == nil or hit:IsDescendantOf(toPart.Parent)
end

-- Function to check if a position is within the camera's field of view
local function isInFOV(targetPos)
    local cameraCFrame = Camera.CFrame
    local cameraForward = cameraCFrame.LookVector
    local toTarget = (targetPos - cameraCFrame.Position).Unit
    local angle = math.deg(math.acos(cameraForward:Dot(toTarget)))
    return angle <= FOV_ANGLE / 2
end

-- Function to update NPC cache
local function updateNPCCache()
    potentialNPCs = {}
    local npcNames = parseInput(npcTextBox.Text)
    local lowerNpcNames = {}
    for _, name in pairs(npcNames) do
        table.insert(lowerNpcNames, name:lower())
    end
    for _, model in pairs(workspace:GetDescendants()) do
        if model:IsA("Model") then
            local humanoid = model:FindFirstChildWhichIsA("Humanoid")
            local rootPart = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Head")
            if humanoid and rootPart and not Players:GetPlayerFromCharacter(model) then
                if #npcNames == 0 or table.find(lowerNpcNames, model.Name:lower()) then
                    table.insert(potentialNPCs, model)
                end
            end
        end
    end
end

updateNPCCache()
spawn(function()
    while true do
        wait(5)
        updateNPCCache()
    end
end)

-- Function to find closest target
local function findClosestTarget()
    local closestTarget = nil
    local closestDistance = math.huge
    local localChar = player.Character
    local localHead = localChar and localChar:FindFirstChild("Head")
    local maxDistance = getAimlockRange()
    local currentTime = tick()
    if not localHead then
        return nil
    end
    if currentTime - lastTargetSearch < searchCooldown then
        return target
    end
    lastTargetSearch = currentTime
    local excludedTeams = parseInput(teamTextBox.Text)
    local npcNames = parseInput(npcTextBox.Text)
    local lowerNpcNames = {}
    for _, name in pairs(npcNames) do
        table.insert(lowerNpcNames, name:lower())
    end
    if npcAimlockEnabled then
        for _, model in pairs(potentialNPCs) do
            if model.Parent then
                local humanoid = model:FindFirstChildWhichIsA("Humanoid")
                local rootPart = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("Head")
                if humanoid and rootPart and humanoid.Health > 0 then
                    local distance = (localHead.Position - rootPart.Position).Magnitude
                    if distance <= maxDistance and (#npcNames == 0 or table.find(lowerNpcNames, model.Name:lower())) then
                        if isVisible(localHead, rootPart) and isInFOV(rootPart.Position) then
                            if distance < closestDistance then
                                closestDistance = distance
                                closestTarget = rootPart
                            end
                        end
                    end
                end
            end
        end
    end
    if playerAimlockEnabled and not closestTarget then
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character then
                local humanoid = otherPlayer.Character:FindFirstChildWhichIsA("Humanoid")
                local rootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart") or otherPlayer.Character:FindFirstChild("Head")
                if humanoid and rootPart and humanoid.Health > 0 then
                    local teamValid = true
                    if otherPlayer.Team and #excludedTeams > 0 then
                        for _, teamName in pairs(excludedTeams) do
                            if otherPlayer.Team.Name:lower() == teamName:lower() then
                                teamValid = false
                                break
                            end
                        end
                    end
                    local distance = (localHead.Position - rootPart.Position).Magnitude
                    if teamValid and distance <= maxDistance and isVisible(localHead, rootPart) and isInFOV(rootPart.Position) then
                        if distance < closestDistance then
                            closestDistance = distance
                            closestTarget = rootPart
                        end
                    end
                end
            end
        end
    end
    return closestTarget
end

-- TPWalk function
local function startTPWalk()
    if tpwalking then
        tpwalking = false
        tpWalkButton.Text = "Enable TPWalk"
        tpWalkButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
        if tpConnection then
            tpConnection:Disconnect()
        end
        return
    end
    local multiplier = tonumber(speedTextBox.Text)
    if not multiplier then
        warn("Please enter a valid number for TPWalk speed")
        return
    end
    speedMultiplier = multiplier
    tpwalking = true
    tpWalkButton.Text = "Disable TPWalk"
    tpWalkButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    local character = player.Character
    local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
    if character and humanoid and humanoid.Parent then
        tpConnection = RunService.Heartbeat:Connect(function(delta)
            if not tpwalking or not character or not humanoid or not humanoid.Parent then
                if tpConnection then
                    tpConnection:Disconnect()
                end
                return
            end
            if humanoid.MoveDirection.Magnitude > 0 then
                local tpwalkSpeed = humanoid.WalkSpeed * speedMultiplier
                character:TranslateBy(humanoid.MoveDirection * delta * tpwalkSpeed)
            end
        end)
    end
end

-- ESP and Tracers function
local function toggleESP()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP On" or "ESP Off"
    espButton.BackgroundColor3 = espEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    local function updateESP()
        for _, highlight in pairs(highlights) do
            if highlight then highlight:Destroy() end
        end
        for _, beam in pairs(beams) do
            if beam then beam:Destroy() end
        end
        highlights = {}
        beams = {}
        if not espEnabled then return end
        local localChar = player.Character
        if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
            return
        end
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player then
                local playerChar = otherPlayer.Character
                if playerChar and playerChar:FindFirstChild("HumanoidRootPart") then
                    local espColor = Color3.fromRGB(255, 0, 0)
                    if #Teams:GetTeams() > 0 and otherPlayer.Team then
                        espColor = otherPlayer.Team.TeamColor.Color
                    end
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "ESPHighlight"
                    highlight.FillColor = espColor
                    highlight.OutlineColor = espColor
                    highlight.Parent = playerChar
                    highlights[otherPlayer] = highlight
                    local attachment0 = Instance.new("Attachment")
                    attachment0.Parent = localChar:FindFirstChild("HumanoidRootPart")
                    local attachment1 = Instance.new("Attachment")
                    attachment1.Parent = playerChar:FindFirstChild("HumanoidRootPart")
                    local beam = Instance.new("Beam")
                    beam.Name = "ESPBeam"
                    beam.Attachment0 = attachment0
                    beam.Attachment1 = attachment1
                    beam.Color = ColorSequence.new(espColor)
                    beam.FaceCamera = true
                    beam.Width0 = 0.15
                    beam.Width1 = 0.15
                    beam.Parent = playerChar
                    beams[otherPlayer] = beam
                end
            end
        end
    end
    updateESP()
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player then
            otherPlayer.CharacterAdded:Connect(function()
                if espEnabled then
                    wait(0.1)
                    updateESP()
                end
            end)
            otherPlayer.CharacterRemoving:Connect(function()
                if highlights[otherPlayer] then
                    highlights[otherPlayer]:Destroy()
                    highlights[otherPlayer] = nil
                end
                if beams[otherPlayer] then
                    beams[otherPlayer]:Destroy()
                    beams[otherPlayer] = nil
                end
            end)
        end
    end
end

-- Function to toggle ignore walls
local function toggleIgnoreWalls()
    ignoreWalls = not ignoreWalls
    ignoreWallsButton.Text = ignoreWalls and "Ignore Walls On" or "Ignore Walls Off"
    ignoreWallsButton.BackgroundColor3 = ignoreWalls and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
end

-- Function to toggle hitbox
local function toggleHitbox()
    hitboxEnabled = not hitboxEnabled
    hitboxButton.Text = hitboxEnabled and "Hitbox On" or "Hitbox Off"
    hitboxButton.BackgroundColor3 = hitboxEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    if hitboxConnection then
        hitboxConnection:Disconnect()
        hitboxConnection = nil
    end
    if hitboxEnabled then
        hitboxConnection = RunService.RenderStepped:Connect(function()
            local localPlayer = Players.LocalPlayer
            if not localPlayer or not localPlayer.Character then
                return
            end
            local excludedTeams = parseInput(hitboxTeamTextBox.Text)
            local headSize = getHitboxSize()
            for _, otherPlayer in ipairs(Players:GetPlayers()) do
                if otherPlayer ~= localPlayer and otherPlayer.Character then
                    local humanoidRootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        local teamValid = true
                        if #excludedTeams > 0 and otherPlayer.Team then
                            for _, teamName in pairs(excludedTeams) do
                                if otherPlayer.Team.Name:lower() == teamName:lower() then
                                    teamValid = false
                                    break
                                end
                            end
                        end
                        if teamValid then
                            if not originalHitboxProperties[humanoidRootPart] then
                                originalHitboxProperties[humanoidRootPart] = {
                                    Size = humanoidRootPart.Size,
                                    Transparency = humanoidRootPart.Transparency,
                                    BrickColor = humanoidRootPart.BrickColor,
                                    Material = humanoidRootPart.Material,
                                    CanCollide = humanoidRootPart.CanCollide
                                }
                            end
                            humanoidRootPart.Size = Vector3.new(headSize, headSize, headSize)
                            humanoidRootPart.Transparency = 0.7
                            humanoidRootPart.BrickColor = BrickColor.new("Really blue")
                            humanoidRootPart.Material = Enum.Material.Neon
                            humanoidRootPart.CanCollide = false
                        else
                            if originalHitboxProperties[humanoidRootPart] then
                                humanoidRootPart.Size = originalHitboxProperties[humanoidRootPart].Size
                                humanoidRootPart.Transparency = originalHitboxProperties[humanoidRootPart].Transparency
                                humanoidRootPart.BrickColor = originalHitboxProperties[humanoidRootPart].BrickColor
                                humanoidRootPart.Material = originalHitboxProperties[humanoidRootPart].Material
                                humanoidRootPart.CanCollide = originalHitboxProperties[humanoidRootPart].CanCollide
                            end
                        end
                    end
                end
            end
        end)
    else
        for humanoidRootPart, properties in pairs(originalHitboxProperties) do
            if humanoidRootPart and humanoidRootPart.Parent then
                humanoidRootPart.Size = properties.Size
                humanoidRootPart.Transparency = properties.Transparency
                humanoidRootPart.BrickColor = properties.BrickColor
                humanoidRootPart.Material = properties.Material
                humanoidRootPart.CanCollide = properties.CanCollide
            end
        end
        originalHitboxProperties = {}
    end
end

-- Function to reapply hitbox on respawn
local function reapplyHitbox()
    if hitboxEnabled then
        toggleHitbox()
        toggleHitbox()
    end
end

-- Function to toggle player aimlock
local function togglePlayerAimlock()
    playerAimlockEnabled = not playerAimlockEnabled
    playerAimlockButton.Text = playerAimlockEnabled and "Player Aimlock On" or "Player Aimlock Off"
    playerAimlockButton.BackgroundColor3 = playerAimlockEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    if playerAimlockEnabled or npcAimlockEnabled then
        if aimlockConnection then aimlockConnection:Disconnect() end
        target = nil
        aimlockPaused = false
        aimlockConnection = RunService.RenderStepped:Connect(function()
            if not (playerAimlockEnabled or npcAimlockEnabled) or not player.Character or not player.Character:FindFirstChild("Humanoid") or player.Character.Humanoid.Health <= 0 then
                playerAimlockEnabled = false
                npcAimlockEnabled = false
                playerAimlockButton.Text = "Player Aimlock Off"
                playerAimlockButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
                npcAimlockButton.Text = "NPC Aimlock Off"
                npcAimlockButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
                if aimlockConnection then aimlockConnection:Disconnect() end
                target = nil
                aimlockPaused = false
                return
            end
            local targetValid = false
            local maxDistance = getAimlockRange()
            if target and target.Parent then
                local humanoid = target.Parent:FindFirstChildWhichIsA("Humanoid")
                local rootPart = target.Parent:FindFirstChild("HumanoidRootPart") or target.Parent:FindFirstChild("Head")
                if humanoid and rootPart and humanoid.Health > 0 and isVisible(player.Character:FindFirstChild("Head"), rootPart) then
                    local distance = (player.Character.Head.Position - rootPart.Position).Magnitude
                    if distance <= maxDistance then
                        targetValid = true
                    else
                        target = nil
                    end
                else
                    target = nil
                end
            end
            if not targetValid then
                target = findClosestTarget()
            end
            if target then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
            end
        end)
    else
        if aimlockConnection then aimlockConnection:Disconnect() end
        target = nil
        aimlockPaused = false
    end
end

-- Function to toggle NPC aimlock
local function toggleNPCAimlock()
    npcAimlockEnabled = not npcAimlockEnabled
    npcAimlockButton.Text = npcAimlockEnabled and "NPC Aimlock On" or "NPC Aimlock Off"
    npcAimlockButton.BackgroundColor3 = npcAimlockEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    if playerAimlockEnabled or npcAimlockEnabled then
        if aimlockConnection then aimlockConnection:Disconnect() end
        target = nil
        aimlockPaused = false
        aimlockConnection = RunService.RenderStepped:Connect(function()
            if not (playerAimlockEnabled or npcAimlockEnabled) or not player.Character or not player.Character:FindFirstChild("Humanoid") or player.Character.Humanoid.Health <= 0 then
                playerAimlockEnabled = false
                npcAimlockEnabled = false
                playerAimlockButton.Text = "Player Aimlock Off"
                playerAimlockButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
                npcAimlockButton.Text = "NPC Aimlock Off"
                npcAimlockButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
                if aimlockConnection then aimlockConnection:Disconnect() end
                target = nil
                aimlockPaused = false
                return
            end
            local targetValid = false
            local maxDistance = getAimlockRange()
            if target and target.Parent then
                local humanoid = target.Parent:FindFirstChildWhichIsA("Humanoid")
                local rootPart = target.Parent:FindFirstChild("HumanoidRootPart") or target.Parent:FindFirstChild("Head")
                if humanoid and rootPart and humanoid.Health > 0 and isVisible(player.Character:FindFirstChild("Head"), rootPart) then
                    local distance = (player.Character.Head.Position - rootPart.Position).Magnitude
                    if distance <= maxDistance then
                        targetValid = true
                    else
                        target = nil
                    end
                else
                    target = nil
                end
            end
            if not targetValid then
                target = findClosestTarget()
            end
            if target then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
            end
        end)
    else
        if aimlockConnection then aimlockConnection:Disconnect() end
        target = nil
        aimlockPaused = false
    end
end

-- Connect buttons
tpWalkButton.MouseButton1Click:Connect(startTPWalk)
espButton.MouseButton1Click:Connect(toggleESP)
hitboxButton.MouseButton1Click:Connect(toggleHitbox)
playerAimlockButton.MouseButton1Click:Connect(togglePlayerAimlock)
npcAimlockButton.MouseButton1Click:Connect(toggleNPCAimlock)
ignoreWallsButton.MouseButton1Click:Connect(toggleIgnoreWalls)

-- Toggle GUI visibility
toggleButton.MouseButton1Click:Connect(function()
    scrollingFrame.Visible = not scrollingFrame.Visible
    toggleButton.Text = scrollingFrame.Visible and "On" or "Off"
    toggleButton.BackgroundColor3 = scrollingFrame.Visible and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(25, 25, 25)
end)

-- Handle character added for hitbox
player.CharacterAdded:Connect(reapplyHitbox)
